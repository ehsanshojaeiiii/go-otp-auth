basePath: /api/v1
definitions:
  model.AuthResponse:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/model.UserResponse'
    type: object
  model.ErrorResponse:
    properties:
      error:
        type: string
      message:
        type: string
    type: object
  model.PaginatedUsersResponse:
    properties:
      page:
        type: integer
      page_size:
        type: integer
      total:
        type: integer
      total_pages:
        type: integer
      users:
        items:
          $ref: '#/definitions/model.UserResponse'
        type: array
    type: object
  model.SendOTPRequest:
    properties:
      phone_number:
        example: "+1234567890"
        type: string
    required:
    - phone_number
    type: object
  model.SuccessResponse:
    properties:
      data: {}
      message:
        type: string
    type: object
  model.UserResponse:
    properties:
      id:
        type: integer
      phone_number:
        type: string
      registered_at:
        type: string
    type: object
  model.VerifyOTPRequest:
    properties:
      otp_code:
        example: "123456"
        type: string
      phone_number:
        example: "+1234567890"
        type: string
    required:
    - otp_code
    - phone_number
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: A service for OTP-based authentication and user management
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: OTP Service API
  version: "1.0"
paths:
  /auth/send-otp:
    post:
      consumes:
      - application/json
      description: Generate and send OTP to the provided phone number
      parameters:
      - description: Phone number
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.SendOTPRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Send OTP to phone number
      tags:
      - auth
  /auth/verify-otp:
    post:
      consumes:
      - application/json
      description: Verify OTP code and return JWT token
      parameters:
      - description: Phone number and OTP
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.VerifyOTPRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Verify OTP and login/register
      tags:
      - auth
  /users:
    get:
      consumes:
      - application/json
      description: Retrieve paginated list of users with optional search
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: page_size
        type: integer
      - description: Phone number search
        in: query
        name: phone_number
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PaginatedUsersResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get list of users
      tags:
      - users
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a single user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get user by ID
      tags:
      - users
  /users/profile:
    get:
      consumes:
      - application/json
      description: Retrieve current authenticated user's profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get current user profile
      tags:
      - users
securityDefinitions:
  BearerAuth:
    description: 'Enter JWT token in format: Bearer {token}'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
